/*
 * Workflow tool
 *
 * PFN 2019 Internship Challenge
 *
 * API version: 1.0.0
 * Generated by: OpenAPI Generator (https://openapi-generator.tech)
 */

package main

import (
	"flag"
	"io/ioutil"
	"log"
	"net/http"
	"os"
	"path/filepath"

	openapi "github.com/care0717/dagdig/go"
)

func main() {
	var (
		dataDirectory string
	)
	flag.StringVar(&dataDirectory, "data", "./data", "job data directory")
	flag.Parse()
	files, err := ioutil.ReadDir(dataDirectory)
	if err != nil {
		panic(err)
	}
	cache := make(map[string][]openapi.Job)
	for _, file := range files {
		path := filepath.Join(dataDirectory, file.Name())
		f, err := os.Open(path)
		if err != nil {
			panic(err)
		}
		job, err := openapi.Parse(f)
		if err != nil {
			panic(err)
		}
		cache[job.Created] = append(cache[job.Created], job)
	}
	log.Printf("Server started")

	DefaultApiService := openapi.NewDefaultApiService(cache)
	DefaultApiController := openapi.NewDefaultApiController(DefaultApiService)

	router := openapi.NewRouter(DefaultApiController)

	log.Fatal(http.ListenAndServe(":8080", router))
}
